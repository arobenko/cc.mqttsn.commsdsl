dist: trusty
language: cpp
sudo: true
notifications:
  email:
    recipients:
      - arobenko@gmail.com
    on_success: change
    on_failure: always
    
    
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8  
            - g++-5  
      env: _CC=gcc-4.8 _CXX=g++-4.8 _DSL_CC=gcc-5 _DSL_CXX=g++-5"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9 
            - g++-5   
      env: _CC=gcc-4.9 _CXX=g++-4.9 _DSL_CC=gcc-5 _DSL_CXX=g++-5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5    
      env: _CC=gcc-5 _CXX=g++-5  _DSL_CC=gcc-5 _DSL_CXX=g++-5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5    
      env: _CC=gcc-5 _CXX=g++-5 _DSL_CC=gcc-5 _DSL_CXX=g++-5 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6    
      env: _CC=gcc-6 _CXX=g++-6 _DSL_CC=gcc-6 _DSL_CXX=g++-6
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6    
      env: _CC=gcc-6 _CXX=g++-6 _DSL_CC=gcc-6 _DSL_CXX=g++-6 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7    
      env: _CC=gcc-7 _CXX=g++-7 _DSL_CC=gcc-7 _DSL_CXX=g++-7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7    
      env: _CC=gcc-7 _CXX=g++-7 _DSL_CC=gcc-7 _DSL_CXX=g++-7 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8  
            - g++-5
      env: _CC=clang-3.8 _CXX=clang++-3.8 _DSL_CC=gcc-5 _DSL_CXX=g++-5 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.9   
            - g++-5 
      env: _CC=clang-3.9 _CXX=clang++-3.9 _DSL_CC=clang-3.9 _DSL_CXX=clang++-3.9 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-4.0    
            - g++-5
      env: _CC=clang-4.0 _CXX=clang++-4.0 _DSL_CC=clang-4.0 _DSL_CXX=clang++-4.0 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0    
            - g++-5
      env: _CC=clang-5.0 _CXX=clang++-5.0 _DSL_CC=clang-5.0 _DSL_CXX=clang++-5.0 _BUILD="-DCMAKE_CXX_STANDARD=14"
      
before_install:
  - sudo add-apt-repository ppa:beineri/opt-qt562-trusty -y
  - sudo add-apt-repository ppa:george-edison55/cmake-3.x -y
  - sudo apt-get update -q
  - sudo apt-get install libc++-dev cmake cmake-data qt56base qt56serialport libboost-program-options-dev libboost-filesystem-dev libboost-system-dev -y      
  - if [[ ${_CC} == clang* ]]; then sudo apt-get remove gcc-4.8 g++-4.8 -y; fi

before_script:
  - source /opt/qt56/bin/qt56-env.sh

script:
  - echo "------------------ Generating Source ------------------"
  - mkdir build
  - cd build
  - CC=${_DSL_CC} CXX=${_DSL_CXX} cmake ..
  - VERBOSE=1 make
  - echo "------------------ Debug build ------------------"
  - mkdir build.debug
  - cd build.debug
  - CC=${_CC} CXX=${_CXX} cmake ../output -DCMAKE_INSTALL_PREFIX=install ${_BUILD}
  - VERBOSE=1 make install
  - cd ..
  - echo "------------------ Release build ------------------"  
  - mkdir build.release
  - cd build.release
  - CC=${_CC} CXX=${_CXX} cmake ../output ${_BUILD} -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
  - VERBOSE=1 make install
  - cd ..  
  - echo "------------------ MinSize Release build ------------------"  
  - mkdir build.min_size
  - cd build.min_size
  - CC=${_CC} CXX=${_CXX} cmake ../output ${_BUILD} -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=MinSizeRel
  - VERBOSE=1 make install
  - cd ..    


